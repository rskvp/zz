// @generated by protobuf-ts 2.9.0
// @generated from protobuf file "health/health.proto" (package "health", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message health.HealthCheckRequest
 */
export interface HealthCheckRequest {
    /**
     * @generated from protobuf field: string service = 1;
     */
    service: string;
}
/**
 * @generated from protobuf message health.HealthCheckResponse
 */
export interface HealthCheckResponse {
    /**
     * @generated from protobuf field: health.HealthCheckResponse.ServingStatus status = 1;
     */
    status: HealthCheckResponse_ServingStatus;
}
/**
 * @generated from protobuf enum health.HealthCheckResponse.ServingStatus
 */
export enum HealthCheckResponse_ServingStatus {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: SERVING = 1;
     */
    SERVING = 1,
    /**
     * @generated from protobuf enum value: NOT_SERVING = 2;
     */
    NOT_SERVING = 2,
    /**
     * Used only by the Watch method.
     *
     * @generated from protobuf enum value: SERVICE_UNKNOWN = 3;
     */
    SERVICE_UNKNOWN = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class HealthCheckRequest$Type extends MessageType<HealthCheckRequest> {
    constructor() {
        super("health.HealthCheckRequest", [
            { no: 1, name: "service", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message health.HealthCheckRequest
 */
export const HealthCheckRequest = new HealthCheckRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HealthCheckResponse$Type extends MessageType<HealthCheckResponse> {
    constructor() {
        super("health.HealthCheckResponse", [
            { no: 1, name: "status", kind: "enum", T: () => ["health.HealthCheckResponse.ServingStatus", HealthCheckResponse_ServingStatus] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message health.HealthCheckResponse
 */
export const HealthCheckResponse = new HealthCheckResponse$Type();
/**
 * @generated ServiceType for protobuf service health.Health
 */
export const Health = new ServiceType("health.Health", [
    { name: "Check", options: {}, I: HealthCheckRequest, O: HealthCheckResponse },
    { name: "Watch", serverStreaming: true, options: {}, I: HealthCheckRequest, O: HealthCheckResponse }
]);
